/* automatically generated by rust-bindgen 0.72.1 */

pub const SHA1_BLOCK_LENGTH: u32 = 64;
pub const SHA1_DIGEST_LENGTH: u32 = 20;
pub type sha1_quadbyte = ::std::os::raw::c_uint;
pub type sha1_byte = ::std::os::raw::c_uchar;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _SHA_CTX {
    pub state: [sha1_quadbyte; 5usize],
    pub count: [sha1_quadbyte; 2usize],
    pub buffer: [sha1_byte; 64usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _SHA_CTX"][::std::mem::size_of::<_SHA_CTX>() - 92usize];
    ["Alignment of _SHA_CTX"][::std::mem::align_of::<_SHA_CTX>() - 4usize];
    ["Offset of field: _SHA_CTX::state"][::std::mem::offset_of!(_SHA_CTX, state) - 0usize];
    ["Offset of field: _SHA_CTX::count"][::std::mem::offset_of!(_SHA_CTX, count) - 20usize];
    ["Offset of field: _SHA_CTX::buffer"][::std::mem::offset_of!(_SHA_CTX, buffer) - 28usize];
};
pub type SHA_CTX = _SHA_CTX;
unsafe extern "C" {
    pub fn SHA1_Init(context: *mut SHA_CTX);
}
unsafe extern "C" {
    pub fn SHA1_Update(context: *mut SHA_CTX, data: *mut sha1_byte, len: ::std::os::raw::c_uint);
}
unsafe extern "C" {
    pub fn SHA1_Final(digest: *mut sha1_byte, context: *mut SHA_CTX);
}
