/* automatically generated by rust-bindgen 0.72.1 */

pub const SHA1_BLOCK_LENGTH: u32 = 64;
pub const SHA1_DIGEST_LENGTH: u32 = 20;
pub const HMAC_SHA1_DIGEST_LENGTH: u32 = 20;
pub const HMAC_SHA1_BLOCK_LENGTH: u32 = 64;
pub type sha1_quadbyte = ::std::os::raw::c_uint;
pub type sha1_byte = ::std::os::raw::c_uchar;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _SHA_CTX {
    pub state: [sha1_quadbyte; 5usize],
    pub count: [sha1_quadbyte; 2usize],
    pub buffer: [sha1_byte; 64usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _SHA_CTX"][::std::mem::size_of::<_SHA_CTX>() - 92usize];
    ["Alignment of _SHA_CTX"][::std::mem::align_of::<_SHA_CTX>() - 4usize];
    ["Offset of field: _SHA_CTX::state"][::std::mem::offset_of!(_SHA_CTX, state) - 0usize];
    ["Offset of field: _SHA_CTX::count"][::std::mem::offset_of!(_SHA_CTX, count) - 20usize];
    ["Offset of field: _SHA_CTX::buffer"][::std::mem::offset_of!(_SHA_CTX, buffer) - 28usize];
};
pub type SHA_CTX = _SHA_CTX;
unsafe extern "C" {
    pub fn SHA1_Init(context: *mut SHA_CTX);
}
unsafe extern "C" {
    pub fn SHA1_Update(context: *mut SHA_CTX, data: *mut sha1_byte, len: ::std::os::raw::c_uint);
}
unsafe extern "C" {
    pub fn SHA1_Final(digest: *mut sha1_byte, context: *mut SHA_CTX);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HMAC_SHA1_CTX {
    pub ipad: [::std::os::raw::c_uchar; 64usize],
    pub opad: [::std::os::raw::c_uchar; 64usize],
    pub shactx: SHA_CTX,
    pub key: [::std::os::raw::c_uchar; 64usize],
    pub keylen: ::std::os::raw::c_uint,
    pub hashkey: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _HMAC_SHA1_CTX"][::std::mem::size_of::<_HMAC_SHA1_CTX>() - 292usize];
    ["Alignment of _HMAC_SHA1_CTX"][::std::mem::align_of::<_HMAC_SHA1_CTX>() - 4usize];
    ["Offset of field: _HMAC_SHA1_CTX::ipad"]
        [::std::mem::offset_of!(_HMAC_SHA1_CTX, ipad) - 0usize];
    ["Offset of field: _HMAC_SHA1_CTX::opad"]
        [::std::mem::offset_of!(_HMAC_SHA1_CTX, opad) - 64usize];
    ["Offset of field: _HMAC_SHA1_CTX::shactx"]
        [::std::mem::offset_of!(_HMAC_SHA1_CTX, shactx) - 128usize];
    ["Offset of field: _HMAC_SHA1_CTX::key"]
        [::std::mem::offset_of!(_HMAC_SHA1_CTX, key) - 220usize];
    ["Offset of field: _HMAC_SHA1_CTX::keylen"]
        [::std::mem::offset_of!(_HMAC_SHA1_CTX, keylen) - 284usize];
    ["Offset of field: _HMAC_SHA1_CTX::hashkey"]
        [::std::mem::offset_of!(_HMAC_SHA1_CTX, hashkey) - 288usize];
};
pub type HMAC_SHA1_CTX = _HMAC_SHA1_CTX;
unsafe extern "C" {
    pub fn HMAC_SHA1_Init(ctx: *mut HMAC_SHA1_CTX);
}
unsafe extern "C" {
    pub fn HMAC_SHA1_UpdateKey(
        ctx: *mut HMAC_SHA1_CTX,
        key: *mut ::std::os::raw::c_uchar,
        keylen: ::std::os::raw::c_uint,
    );
}
unsafe extern "C" {
    pub fn HMAC_SHA1_EndKey(ctx: *mut HMAC_SHA1_CTX);
}
unsafe extern "C" {
    pub fn HMAC_SHA1_StartMessage(ctx: *mut HMAC_SHA1_CTX);
}
unsafe extern "C" {
    pub fn HMAC_SHA1_UpdateMessage(
        ctx: *mut HMAC_SHA1_CTX,
        data: *mut ::std::os::raw::c_uchar,
        datalen: ::std::os::raw::c_uint,
    );
}
unsafe extern "C" {
    pub fn HMAC_SHA1_EndMessage(out: *mut ::std::os::raw::c_uchar, ctx: *mut HMAC_SHA1_CTX);
}
unsafe extern "C" {
    pub fn HMAC_SHA1_Done(ctx: *mut HMAC_SHA1_CTX);
}
unsafe extern "C" {
    pub fn HMAC_SHA1(
        secret: *mut ::std::os::raw::c_void,
        data: *mut ::std::os::raw::c_void,
        res: *mut ::std::os::raw::c_void,
        len: ::std::os::raw::c_int,
    );
}
