/* automatically generated by rust-bindgen 0.72.1 */

pub const LITTLE_ENDIAN: u32 = 1234;
pub const BIG_ENDIAN: u32 = 4321;
pub const U32_F: &[u8; 2] = b"u\0";
pub const U16_F: &[u8; 3] = b"hu\0";
pub const S32_F: &[u8; 2] = b"d\0";
pub const S16_F: &[u8; 3] = b"hd\0";
pub const X32_F: &[u8; 2] = b"x\0";
pub const X16_F: &[u8; 3] = b"hx\0";
pub const SZT_F: &[u8; 2] = b"u\0";
pub const X8_F: &[u8; 4] = b"02x\0";
pub const LWIP_DBG_LEVEL_ALL: u32 = 0;
pub const LWIP_DBG_LEVEL_OFF: u32 = 0;
pub const LWIP_DBG_LEVEL_WARNING: u32 = 1;
pub const LWIP_DBG_LEVEL_SERIOUS: u32 = 2;
pub const LWIP_DBG_LEVEL_SEVERE: u32 = 3;
pub const LWIP_DBG_MASK_LEVEL: u32 = 3;
pub const LWIP_DBG_ON: u32 = 128;
pub const LWIP_DBG_OFF: u32 = 0;
pub const LWIP_DBG_TRACE: u32 = 64;
pub const LWIP_DBG_STATE: u32 = 32;
pub const LWIP_DBG_FRESH: u32 = 16;
pub const LWIP_DBG_HALT: u32 = 8;
pub type u8_t = ::std::os::raw::c_uchar;
pub type s8_t = ::std::os::raw::c_schar;
pub type u16_t = ::std::os::raw::c_ushort;
pub type s16_t = ::std::os::raw::c_short;
pub type u32_t = ::std::os::raw::c_uint;
pub type s32_t = ::std::os::raw::c_int;
pub type u64_t = ::std::os::raw::c_ulong;
pub type s64_t = ::std::os::raw::c_long;
pub type mem_ptr_t = u64_t;
