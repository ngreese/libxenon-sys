/* automatically generated by rust-bindgen 0.72.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct queue_s {
    pub q_next: *mut queue_s,
    pub q_prev: *mut queue_s,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of queue_s"][::std::mem::size_of::<queue_s>() - 16usize];
    ["Alignment of queue_s"][::std::mem::align_of::<queue_s>() - 8usize];
    ["Offset of field: queue_s::q_next"][::std::mem::offset_of!(queue_s, q_next) - 0usize];
    ["Offset of field: queue_s::q_prev"][::std::mem::offset_of!(queue_s, q_prev) - 8usize];
};
pub type queue_t = queue_s;
unsafe extern "C" {
    pub fn q_enqueue(arg1: *mut queue_t, arg2: *mut queue_t);
}
unsafe extern "C" {
    pub fn q_dequeue(arg1: *mut queue_t);
}
unsafe extern "C" {
    pub fn q_deqnext(arg1: *mut queue_t) -> *mut queue_t;
}
unsafe extern "C" {
    pub fn q_map(
        qb: *mut queue_t,
        func: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut queue_t,
                arg2: ::std::os::raw::c_uint,
                arg3: ::std::os::raw::c_uint,
            ) -> ::std::os::raw::c_int,
        >,
        a: ::std::os::raw::c_uint,
        b: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn q_count(arg1: *mut queue_t) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn q_find(arg1: *mut queue_t, arg2: *mut queue_t) -> ::std::os::raw::c_int;
}
