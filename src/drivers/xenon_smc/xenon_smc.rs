/* automatically generated by rust-bindgen 0.72.1 */

pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __TIMESIZE: u32 = 64;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 35;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __fsid_t"][::std::mem::size_of::<__fsid_t>() - 8usize];
    ["Alignment of __fsid_t"][::std::mem::align_of::<__fsid_t>() - 4usize];
    ["Offset of field: __fsid_t::__val"][::std::mem::offset_of!(__fsid_t, __val) - 0usize];
};
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __suseconds64_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
pub const ir_remote_codes_IR_NUM_0: ir_remote_codes = 0;
pub const ir_remote_codes_IR_NUM_1: ir_remote_codes = 1;
pub const ir_remote_codes_IR_NUM_2: ir_remote_codes = 2;
pub const ir_remote_codes_IR_NUM_3: ir_remote_codes = 3;
pub const ir_remote_codes_IR_NUM_4: ir_remote_codes = 4;
pub const ir_remote_codes_IR_NUM_5: ir_remote_codes = 5;
pub const ir_remote_codes_IR_NUM_6: ir_remote_codes = 6;
pub const ir_remote_codes_IR_NUM_7: ir_remote_codes = 7;
pub const ir_remote_codes_IR_NUM_8: ir_remote_codes = 8;
pub const ir_remote_codes_IR_NUM_9: ir_remote_codes = 9;
pub const ir_remote_codes_IR_CLEAR: ir_remote_codes = 10;
pub const ir_remote_codes_IR_ENTER: ir_remote_codes = 11;
pub const ir_remote_codes_IR_UNKNOWN_0: ir_remote_codes = 12;
pub const ir_remote_codes_IR_WIN_MEDIA: ir_remote_codes = 13;
pub const ir_remote_codes_IR_MUTE: ir_remote_codes = 14;
pub const ir_remote_codes_IR_INFO: ir_remote_codes = 15;
pub const ir_remote_codes_IR_VOLUME_UP: ir_remote_codes = 16;
pub const ir_remote_codes_IR_VOLUME_DOWN: ir_remote_codes = 17;
pub const ir_remote_codes_IR_FAST_FORWARD: ir_remote_codes = 20;
pub const ir_remote_codes_IR_FAST_REWIND: ir_remote_codes = 21;
pub const ir_remote_codes_IR_PLAY: ir_remote_codes = 22;
pub const ir_remote_codes_IR_REC: ir_remote_codes = 23;
pub const ir_remote_codes_IR_PAUSE: ir_remote_codes = 24;
pub const ir_remote_codes_IR_STOP: ir_remote_codes = 25;
pub const ir_remote_codes_IR_GOTO_END: ir_remote_codes = 26;
pub const ir_remote_codes_IR_GOTO_START: ir_remote_codes = 27;
pub const ir_remote_codes_IR_UNKNOWN_1: ir_remote_codes = 28;
pub const ir_remote_codes_IR_100: ir_remote_codes = 29;
pub const ir_remote_codes_IR_UP: ir_remote_codes = 30;
pub const ir_remote_codes_IR_DOWN: ir_remote_codes = 31;
pub const ir_remote_codes_IR_LEFT: ir_remote_codes = 32;
pub const ir_remote_codes_IR_RIGHT: ir_remote_codes = 33;
pub const ir_remote_codes_IR_OK: ir_remote_codes = 34;
pub const ir_remote_codes_IR_BACK: ir_remote_codes = 35;
pub const ir_remote_codes_IR_DVD_MENU: ir_remote_codes = 36;
pub const ir_remote_codes_IR_BTN_B: ir_remote_codes = 37;
pub const ir_remote_codes_IR_BTN_Y: ir_remote_codes = 38;
pub const ir_remote_codes_IR_DISPLAY: ir_remote_codes = 79;
pub const ir_remote_codes_IR_TITLE: ir_remote_codes = 81;
pub const ir_remote_codes_IR_GUIDE: ir_remote_codes = 100;
pub const ir_remote_codes_IR_BTN_A: ir_remote_codes = 102;
pub const ir_remote_codes_IR_BTN_X: ir_remote_codes = 104;
pub const ir_remote_codes_IR_CH_UP: ir_remote_codes = 108;
pub const ir_remote_codes_IR_CH_DOWN: ir_remote_codes = 109;
pub type ir_remote_codes = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn xenon_smc_send_message(msg: *const ::std::os::raw::c_uchar);
}
unsafe extern "C" {
    pub fn xenon_smc_receive_message(msg: *mut ::std::os::raw::c_uchar) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xenon_smc_receive_response(msg: *mut ::std::os::raw::c_uchar) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xenon_smc_poll() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xenon_smc_get_ir() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xenon_smc_ana_write(addr: u8, val: u32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xenon_smc_ana_read(addr: u8, val: *mut u32) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xenon_smc_i2c_ddc_lock(lock: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xenon_smc_i2c_write(addr: u16, val: u8) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xenon_smc_i2c_read(addr: u16, val: *mut u8) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xenon_smc_set_led(override_: ::std::os::raw::c_int, value: ::std::os::raw::c_int);
}
unsafe extern "C" {
    pub fn xenon_smc_set_power_led(
        override_: ::std::os::raw::c_int,
        state: ::std::os::raw::c_int,
        startanim: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn xenon_smc_power_shutdown();
}
unsafe extern "C" {
    pub fn xenon_smc_power_reboot();
}
unsafe extern "C" {
    pub fn xenon_smc_start_bootanim();
}
unsafe extern "C" {
    pub fn xenon_smc_set_fan_algorithm(algorithm: ::std::os::raw::c_int);
}
unsafe extern "C" {
    pub fn xenon_smc_query_sensors(data: *mut u16);
}
unsafe extern "C" {
    pub fn xenon_smc_read_avpack() -> ::std::os::raw::c_int;
}
